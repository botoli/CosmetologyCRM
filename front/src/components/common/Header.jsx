import React, { useContext, useState } from 'react';
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { AuthContext } from '../../contexts/AuthContext';

const Header = () => {
  const { user, logout } = useContext(AuthContext);
  const navigate = useNavigate();
  const location = useLocation();
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  const handleLogout = () => {
    logout();
    navigate('/login');
    setIsMobileMenuOpen(false);
  };

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  const isActiveRoute = (path) => {
    return location.pathname === path;
  };

  const isAdminRoute = location.pathname.startsWith('/admin');

  return (
    <header className="header">
      <div className="header-content">
        {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –±—Ä–µ–Ω–¥ */}
        <Link to="/" className="logo" onClick={() => setIsMobileMenuOpen(false)}>
          <span className="logo-icon">üíÜ</span>
          <span className="logo-text">Cosmetology</span>
        </Link>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
        <nav className="nav hide-md">
          {user ? (
            <>
              {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
              {user.role === 'admin' && (
                <div className="admin-switcher">
                  <Link to="/admin" className={`nav-link ${isAdminRoute ? 'active' : ''}`}>
                    üëë –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                  </Link>
                  <Link to="/" className={`nav-link ${!isAdminRoute ? 'active' : ''}`}>
                    üëÄ –í–∏–¥ –∫–ª–∏–µ–Ω—Ç–∞
                  </Link>
                </div>
              )}

              {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
              {user.role !== 'admin' && (
                <>
                  <Link to="/" className={`nav-link ${isActiveRoute('/') ? 'active' : ''}`}>
                    üíÜ –£—Å–ª—É–≥–∏
                  </Link>
                  <Link
                    to="/booking"
                    className={`nav-link ${isActiveRoute('/booking') ? 'active' : ''}`}>
                    üìÖ –ó–∞–ø–∏—Å—å
                  </Link>
                </>
              )}

              {/* –û–±—â–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
              <Link
                to="/profile"
                className={`nav-link ${isActiveRoute('/profile') ? 'active' : ''}`}>
                üë§ –ü—Ä–æ—Ñ–∏–ª—å
              </Link>
            </>
          ) : (
            <>
              <Link to="/login" className="nav-link">
                üîê –í–æ–π—Ç–∏
              </Link>
              <Link to="/register" className="nav-link">
                ‚ú® –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </Link>
            </>
          )}
        </nav>

        {/* –ë–ª–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div className="user-section">
          {user ? (
            <>
              <div className="user-info hide-sm">
                <span className="welcome">
                  –ü—Ä–∏–≤–µ—Ç, <strong>{user.name}</strong>
                  {user.role === 'admin' && ' üëë'}
                </span>
              </div>

              <button onClick={handleLogout} className="logout-btn">
                üö™ –í—ã–π—Ç–∏
              </button>
            </>
          ) : (
            <div className="auth-buttons hide-sm">
              <Link to="/login" className="btn btn--secondary btn--small">
                –í–æ–π—Ç–∏
              </Link>
              <Link to="/register" className="btn btn--primary btn--small">
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </Link>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é */}
          <button className="mobile-menu-btn" onClick={toggleMobileMenu}>
            {isMobileMenuOpen ? '‚úï' : '‚ò∞'}
          </button>
        </div>
      </div>

      {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
      {isMobileMenuOpen && (
        <div className="mobile-menu">
          <nav className="mobile-nav">
            {user ? (
              <>
                {/* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
                {user.role === 'admin' && (
                  <>
                    <Link
                      to="/admin"
                      className={`mobile-nav-link ${isAdminRoute ? 'active' : ''}`}
                      onClick={() => setIsMobileMenuOpen(false)}>
                      üëë –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    </Link>
                    <Link
                      to="/"
                      className={`mobile-nav-link ${!isAdminRoute ? 'active' : ''}`}
                      onClick={() => setIsMobileMenuOpen(false)}>
                      üëÄ –í–∏–¥ –∫–ª–∏–µ–Ω—Ç–∞
                    </Link>
                  </>
                )}

                {/* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                {user.role !== 'admin' && (
                  <>
                    <Link
                      to="/"
                      className={`mobile-nav-link ${isActiveRoute('/') ? 'active' : ''}`}
                      onClick={() => setIsMobileMenuOpen(false)}>
                      üíÜ –£—Å–ª—É–≥–∏
                    </Link>
                    <Link
                      to="/booking"
                      className={`mobile-nav-link ${isActiveRoute('/booking') ? 'active' : ''}`}
                      onClick={() => setIsMobileMenuOpen(false)}>
                      üìÖ –ó–∞–ø–∏—Å—å
                    </Link>
                  </>
                )}

                {/* –û–±—â–∞—è –º–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
                <Link
                  to="/profile"
                  className={`mobile-nav-link ${isActiveRoute('/profile') ? 'active' : ''}`}
                  onClick={() => setIsMobileMenuOpen(false)}>
                  üë§ –ü—Ä–æ—Ñ–∏–ª—å
                </Link>

                <div className="mobile-user-info">
                  <span>–ü—Ä–∏–≤–µ—Ç, {user.name}</span>
                  {user.role === 'admin' && <span className="admin-badge">üëë –ê–¥–º–∏–Ω</span>}
                </div>

                <button onClick={handleLogout} className="mobile-logout-btn">
                  üö™ –í—ã–π—Ç–∏
                </button>
              </>
            ) : (
              <>
                <Link
                  to="/login"
                  className="mobile-nav-link"
                  onClick={() => setIsMobileMenuOpen(false)}>
                  üîê –í–æ–π—Ç–∏
                </Link>
                <Link
                  to="/register"
                  className="mobile-nav-link"
                  onClick={() => setIsMobileMenuOpen(false)}>
                  ‚ú® –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                </Link>
              </>
            )}
          </nav>
        </div>
      )}
    </header>
  );
};

export default Header;
