import React, { useContext, useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { AuthContext } from '../../contexts/AuthContext';
import TelegramLink from './TelegramLink';
import { apiService } from '../../services/api';

const UserProfile = () => {
  const { user } = useContext(AuthContext);
  const [activeTab, setActiveTab] = useState('profile');
  const [bookings, setBookings] = useState([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    if (activeTab === 'bookings') {
      loadBookings();
    }
  }, [activeTab]);

  const loadBookings = async () => {
    setLoading(true);
    try {
      const userBookings = await apiService.getUserBookings();
      setBookings(userBookings);
    } catch (error) {
      console.error('Error loading bookings:', error);
    } finally {
      setLoading(false);
    }
  };

  const tabs = [
    { id: 'profile', name: 'üë§ –ü—Ä–æ—Ñ–∏–ª—å', icon: 'üë§' },
    { id: 'bookings', name: 'üìÖ –ú–æ–∏ –∑–∞–ø–∏—Å–∏', icon: 'üìÖ' },
    { id: 'settings', name: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è' },
  ];

  const formatDate = (dateStr) => {
    const date = new Date(dateStr);
    return date.toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric',
    });
  };

  return (
    <div className="container">
      <div className="profile-header">
        <h1 className="profile-title">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
        <p className="profile-subtitle">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –∑–∞–ø–∏—Å—è–º–∏</p>
      </div>

      <div className="grid grid--2 gap-lg">
        {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π */}
        <div className="card">
          <div className="profile-sidebar">
            <div className="user-info">
              <div className="user-avatar">
                {user.name?.[0]}
                {user.surname?.[0]}
              </div>
              <div>
                <h3 className="user-name">
                  {user.name} {user.surname}
                </h3>
                <p className="user-email">{user.email}</p>
                <div className={`user-badge ${user.role === 'admin' ? 'admin' : 'client'}`}>
                  {user.role === 'admin' ? 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : 'üí´ –ö–ª–∏–µ–Ω—Ç'}
                </div>
              </div>
            </div>

            <nav className="profile-nav">
              {tabs.map((tab) => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`nav-button ${activeTab === tab.id ? 'active' : ''}`}>
                  <span className="nav-icon">{tab.icon}</span>
                  {tab.name}
                </button>
              ))}
            </nav>
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="card">
          {activeTab === 'profile' && (
            <div className="tab-content">
              <h2 className="tab-title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ</h2>

              <div className="info-grid">
                <div className="info-item">
                  <label className="info-label">–ò–º—è</label>
                  <div className="info-value">{user.name}</div>
                </div>
                <div className="info-item">
                  <label className="info-label">–§–∞–º–∏–ª–∏—è</label>
                  <div className="info-value">{user.surname}</div>
                </div>
                <div className="info-item">
                  <label className="info-label">Email</label>
                  <div className="info-value">{user.email}</div>
                </div>
                <div className="info-item">
                  <label className="info-label">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                  <div className="info-value">{user.phone}</div>
                </div>
              </div>

              <div className="telegram-section">
                <TelegramLink />
              </div>
            </div>
          )}

          {activeTab === 'bookings' && (
            <div className="tab-content">
              <h2 className="tab-title">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø–∏—Å–µ–π</h2>

              {loading ? (
                <div className="loading-bookings">
                  <div className="loading__spinner"></div>
                  <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏...</p>
                </div>
              ) : bookings.length > 0 ? (
                <div className="bookings-list">
                  {bookings.map((booking) => (
                    <div key={booking.id} className="booking-card">
                      <div className="booking-header">
                        <h4 className="booking-service">{booking.service_name}</h4>
                        <span className={`booking-status ${booking.status}`}>
                          {booking.status === 'confirmed'
                            ? '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ'
                            : booking.status === 'pending'
                            ? '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ'
                            : booking.status === 'cancelled'
                            ? '‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ'
                            : '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ'}
                        </span>
                      </div>
                      <div className="booking-details">
                        <div className="booking-date">
                          <span className="detail-label">üìÖ –î–∞—Ç–∞:</span>
                          <span>{formatDate(booking.booking_date)}</span>
                        </div>
                        <div className="booking-time">
                          <span className="detail-label">‚è∞ –í—Ä–µ–º—è:</span>
                          <span>{booking.booking_time}</span>
                        </div>
                        <div className="booking-price">
                          <span className="detail-label">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                          <span>{booking.price} ‚ÇΩ</span>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="empty-state">
                  <div className="empty-icon">üìÖ</div>
                  <h3 className="empty-title">–ó–∞–ø–∏—Å–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</h3>
                  <p className="empty-text">
                    –£ –≤–∞—Å –µ—â–µ –Ω–µ –±—ã–ª–æ –∑–∞–ø–∏—Å–µ–π. –ó–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç!
                  </p>
                </div>
              )}
            </div>
          )}

          {activeTab === 'settings' && (
            <div className="tab-content">
              <h2 className="tab-title">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>

              <div className="settings-list">
                <div className="setting-item">
                  <div>
                    <h4 className="setting-title">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ Email</h4>
                    <p className="setting-description">–ü–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–ø–∏—Å—è—Ö –Ω–∞ email</p>
                  </div>
                  <div className="toggle-container">
                    <input
                      type="checkbox"
                      id="email-notifications"
                      defaultChecked
                      className="toggle-input"
                    />
                    <label htmlFor="email-notifications" className="toggle-label"></label>
                  </div>
                </div>

                <div className="setting-item">
                  <div>
                    <h4 className="setting-title">SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
                    <p className="setting-description">–ü–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ SMS</p>
                  </div>
                  <div className="toggle-container">
                    <input type="checkbox" id="sms-notifications" className="toggle-input" />
                    <label htmlFor="sms-notifications" className="toggle-label"></label>
                  </div>
                </div>

                <div className="setting-item">
                  <div>
                    <h4 className="setting-title">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</h4>
                    <p className="setting-description">–†—É—Å—Å–∫–∏–π</p>
                  </div>
                  <select className="language-select">
                    <option>–†—É—Å—Å–∫–∏–π</option>
                    <option>English</option>
                  </select>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default UserProfile;
